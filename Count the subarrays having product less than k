/*
QUE LINK : https://practice.geeksforgeeks.org/problems/count-the-subarrays-having-product-less-than-k1708/1/#

Given an array of positive numbers, the task is to find the number of possible contiguous subarrays having product less than a given number k.

Example 1:

Input : 
n = 4, k = 10
a[] = {1, 2, 3, 4}
Output : 
7
Explanation:
The contiguous subarrays are {1}, {2}, {3}, {4} 
{1, 2}, {1, 2, 3} and {2, 3} whose count is 7.
*/

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;



 // } Driver Code Ends


class Solution{
  public:
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
        // int count=0;
        // for(int i=0;i<n;i++){
        //     if(a[i]<k)
        //     count++;
        //     int mul=a[i];
        //     for(int j=i+1;j<n;j++){
        //         mul = mul * a[j];
        //         if(mul<k)
        //         count++;
        //         else
        //         break;
        //     }
        // }
        // return count;
        
        long long p = 1;
        int res = 0;
        for (int start = 0, end = 0; end < n; end++) {
            p *= a[end];
            while (start < end && p >= k)
                p /= a[start++];
            if (p < k) {
                int len = end - start + 1;
                res += len;
            }
        }
     
        return res;
        }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        long long int k;
        cin >> n >> k;
        vector<int> arr(n);
        for (i = 0; i < n; i++) cin >> arr[i];
        Solution obj;
        cout << obj.countSubArrayProductLessThanK(arr, n, k) << endl;
    }
    return 0;
}
  // } Driver Code Ends
